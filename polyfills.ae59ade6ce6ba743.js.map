{"version":3,"file":"polyfills.ae59ade6ce6ba743.js","mappings":"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","names":["global","performance","mark","name","performanceMeasure","label","measure","symbolPrefix","__Zone_symbol_prefix","__symbol__","checkDuplicate","Zone","Error","constructor","parent","zoneSpec","this","_parent","_name","_properties","properties","_zoneDelegate","_ZoneDelegate","static","Promise","patches","ZoneAwarePromise","root","zone","current","_currentZoneFrame","currentTask","_currentTask","fn","ignoreDuplicate","hasOwnProperty","perfName","_api","get","key","getZoneWith","fork","wrap","callback","source","_callback","intercept","runGuarded","arguments","run","applyThis","applyArgs","invoke","error","handleError","runTask","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","scheduleTask","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","err","scheduleMicroTask","customSchedule","ZoneTask","microTask","scheduleMacroTask","customCancel","scheduleEventTask","cancelTask","canceling","count","i","length","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","push","scheduleFn","value","isEmpty","counts","prev","next","change","options","_state","self","useG","call","args","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","toString","handleId","Object","prototype","toJSON","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","nativeScheduleMicroTask","func","resolve","nativeThen","then","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","window","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","scheduleMacroTaskWithCurrentZone","zoneSymbol","isWindowExists","internalWindow","_global","isPropertyWritable","propertyDesc","writable","set","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","HTMLElement","isMix","zoneSymbolEventNames$1","wrapFn","event","eventNameSymbol","listener","result","message","filename","lineno","colno","preventDefault","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","ua","navigator","userAgent","indexOf","__load_patch","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","e","rejection","console","stack","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","forwardResolution","forwardRejection","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","makeResolver","promise","v","resolvePromise","once","wasCalled","wrappedFunction","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","TypeError","clearRejectedNoCatch","trace","scheduleResolveOrReject","readableObjectToString","JSON","stringify","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","AggregateError","values","Symbol","iterator","promises","finished","errors","res","rej","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","species","_a","C","catch","finally","onFinally","race","all","NativePromise","symbolThenPatched","Ctor","originalThen","zoneify","resultPromise","ctor","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","globalCallback","context","isCapture","tasks","copyTasks","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","buildEventListenerOptions","passive","capture","assign","prepend","isExisting","symbolEventNames","symbolEventName","existingTasks","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","constructorName","targetSource","unshift","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","getOnEventNames","getOwnPropertyNames","startsWith","map","substring","eventNames","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","id","legacyPatch","clear","blockingMethods","s","patchEvent","eventTargetPatch","EVENT_TARGET","EventTarget","XMLHttpRequestEventTarget","propertyDescriptorPatch","__Zone_ignore_on_properties","patchTargets","ignoreErrorProperties","isIE","patchCustomElements","customElements","patchXHR","XMLHttpRequest","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","findPendingTask","geolocation","patchPrototype","fnNames","findPromiseRejectionHandler","PromiseRejectionEvent","evt"],"sourceRoot":"webpack:///","sources":["./node_modules/zone.js/fesm2015/zone.js"],"sourcesContent":["'use strict';\n/**\n * @license Angular v15.1.0-next.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n((function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class _ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n}))(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected :\n                forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    const AggregateError = global.AggregateError;\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static any(values) {\n            if (!values || typeof values[Symbol.iterator] !== 'function') {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            const promises = [];\n            let count = 0;\n            try {\n                for (let v of values) {\n                    count++;\n                    promises.push(ZoneAwarePromise.resolve(v));\n                }\n            }\n            catch (err) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            if (count === 0) {\n                return Promise.reject(new AggregateError([], 'All promises were rejected'));\n            }\n            let finished = false;\n            const errors = [];\n            return new ZoneAwarePromise((resolve, reject) => {\n                for (let i = 0; i < promises.length; i++) {\n                    promises[i].then(v => {\n                        if (finished) {\n                            return;\n                        }\n                        finished = true;\n                        resolve(v);\n                    }, err => {\n                        errors.push(err);\n                        count--;\n                        if (count === 0) {\n                            finished = true;\n                            reject(new AggregateError(errors, 'All promises were rejected'));\n                        }\n                    });\n                }\n            });\n        }\n        ;\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                const onceWrapper = once();\n                executor &&\n                    executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            var _a;\n            // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n            // may be an object without a prototype (created through `Object.create(null)`); thus\n            // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n            // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n            // object and copies promise properties into that object (within the `getOrCreateLoad`\n            // function). The zone.js then checks if the resolved value has the `then` method and invokes\n            // it with the `value` context. Otherwise, this will throw an error: `TypeError: Cannot read\n            // properties of undefined (reading 'Symbol(Symbol.species)')`.\n            let C = (_a = this.constructor) === null || _a === void 0 ? void 0 : _a[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            var _a;\n            // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n            let C = (_a = this.constructor) === null || _a === void 0 ? void 0 : _a[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch (_a) {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter(name => name.startsWith('on') && name.length > 2)\n        .map(name => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document', 'SVGElement', 'Element', 'HTMLElement', 'HTMLBodyElement', 'HTMLMediaElement',\n            'HTMLFrameSetElement', 'HTMLFrameElement', 'HTMLIFrameElement', 'HTMLMarqueeElement', 'Worker'\n        ]);\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'IDBIndex', 'IDBRequest', 'IDBOpenDBRequest',\n        'IDBDatabase', 'IDBTransaction', 'IDBCursor', 'WebSocket'\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target && target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    // Collect native event names by looking at properties\n    // on the global namespace, e.g. 'onclick'.\n    const eventNames = getOnEventNames(global);\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n"],"x_google_ignoreList":[0]}